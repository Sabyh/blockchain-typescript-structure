"use strict";
// export contractABI: any = [{ "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "string[]", "name": "agreementNos", "type": "string[]" }, { "indexed": true, "internalType": "address", "name": "storedBy", "type": "address" }], "name": "AgreementBatchStored", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "string", "name": "agreementNo", "type": "string" }, { "indexed": true, "internalType": "enum AgreementStorage.AgreementType", "name": "agreementType", "type": "uint8" }, { "indexed": true, "internalType": "address", "name": "cancelledBy", "type": "address" }], "name": "AgreementCancelled", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "string", "name": "agreementNo", "type": "string" }, { "indexed": true, "internalType": "enum AgreementStorage.AgreementType", "name": "agreementType", "type": "uint8" }, { "indexed": true, "internalType": "address", "name": "deletedBy", "type": "address" }], "name": "AgreementDeleted", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "string", "name": "agreementNo", "type": "string" }, { "indexed": true, "internalType": "enum AgreementStorage.AgreementType", "name": "agreementType", "type": "uint8" }, { "indexed": false, "internalType": "string", "name": "clientName", "type": "string" }, { "indexed": false, "internalType": "string", "name": "partyName", "type": "string" }, { "indexed": false, "internalType": "uint256", "name": "agreementDate", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "expiryDate", "type": "uint256" }, { "indexed": false, "internalType": "string", "name": "ipfsHash", "type": "string" }, { "indexed": true, "internalType": "address", "name": "storedBy", "type": "address" }], "name": "AgreementStored", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "string", "name": "agreementNo", "type": "string" }, { "indexed": false, "internalType": "string", "name": "clientName", "type": "string" }, { "indexed": false, "internalType": "string", "name": "partyName", "type": "string" }, { "indexed": false, "internalType": "uint256", "name": "expiryDate", "type": "uint256" }, { "indexed": false, "internalType": "string", "name": "ipfsHash", "type": "string" }, { "indexed": true, "internalType": "address", "name": "updatedBy", "type": "address" }], "name": "AgreementUpdated", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "role", "type": "bytes32" }, { "indexed": true, "internalType": "bytes32", "name": "previousAdminRole", "type": "bytes32" }, { "indexed": true, "internalType": "bytes32", "name": "newAdminRole", "type": "bytes32" }], "name": "RoleAdminChanged", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "role", "type": "bytes32" }, { "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": true, "internalType": "address", "name": "sender", "type": "address" }], "name": "RoleGranted", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "role", "type": "bytes32" }, { "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": true, "internalType": "address", "name": "sender", "type": "address" }], "name": "RoleRevoked", "type": "event" }, { "inputs": [], "name": "ADMIN_ROLE", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "DEFAULT_ADMIN_ROLE", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_agreementNo", "type": "string" }], "name": "cancelAgreement", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_agreementNo", "type": "string" }], "name": "deleteAgreement", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_agreementNo", "type": "string" }], "name": "getAgreement", "outputs": [{ "internalType": "enum AgreementStorage.AgreementType", "name": "agreementType", "type": "uint8" }, { "internalType": "string", "name": "clientName", "type": "string" }, { "internalType": "string", "name": "partyName", "type": "string" }, { "internalType": "uint256", "name": "agreementDate", "type": "uint256" }, { "internalType": "uint256", "name": "expiryDate", "type": "uint256" }, { "internalType": "string", "name": "ipfsHash", "type": "string" }, { "internalType": "bool", "name": "isActive", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }], "name": "getRoleAdmin", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }, { "internalType": "address", "name": "account", "type": "address" }], "name": "grantRole", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }, { "internalType": "address", "name": "account", "type": "address" }], "name": "hasRole", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }, { "internalType": "address", "name": "account", "type": "address" }], "name": "renounceRole", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }, { "internalType": "address", "name": "account", "type": "address" }], "name": "revokeRole", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "enum AgreementStorage.AgreementType", "name": "_agreementType", "type": "uint8" }, { "internalType": "string", "name": "_agreementNo", "type": "string" }, { "internalType": "string", "name": "_clientName", "type": "string" }, { "internalType": "string", "name": "_partyName", "type": "string" }, { "internalType": "uint256", "name": "_agreementDate", "type": "uint256" }, { "internalType": "uint256", "name": "_expiryDate", "type": "uint256" }, { "internalType": "string", "name": "_ipfsHash", "type": "string" }], "name": "storeAgreement", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "enum AgreementStorage.AgreementType[]", "name": "_agreementTypes", "type": "uint8[]" }, { "internalType": "string[]", "name": "_agreementNos", "type": "string[]" }, { "internalType": "string[]", "name": "_clientNames", "type": "string[]" }, { "internalType": "string[]", "name": "_partyNames", "type": "string[]" }, { "internalType": "uint256[]", "name": "_agreementDates", "type": "uint256[]" }, { "internalType": "uint256[]", "name": "_expiryDates", "type": "uint256[]" }, { "internalType": "string[]", "name": "_ipfsHashes", "type": "string[]" }], "name": "storeAgreementsBatch", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }], "name": "supportsInterface", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_agreementNo", "type": "string" }, { "internalType": "string", "name": "_clientName", "type": "string" }, { "internalType": "string", "name": "_partyName", "type": "string" }, { "internalType": "uint256", "name": "_expiryDate", "type": "uint256" }, { "internalType": "string", "name": "_ipfsHash", "type": "string" }], "name": "updateAgreement", "outputs": [], "stateMutability": "nonpayable", "type": "function" }];
